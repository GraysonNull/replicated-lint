{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "properties": {
    "assets": {
      "description": "Assets allows you to configure the application artifacts and deployment manifests will be delivered to end users running your application",
      "type": "object",
      "properties": {
        "v1": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "docker": {
                "description": "A `docker` asset will pull an image from registry.replicated.com or from a configured third party private registry and produce a tar archive of the container image.",
                "examples": [
                  {
                    "image": "quay.io/cooltool-enterprise/api:1.0.1",
                    "dest": "images/api.tar",
                    "source": "quayio-private"
                  },
                  {
                    "image": "registry.replicated.com/cooltool/worker:1.1.0",
                    "dest": "images/worker.tar",
                    "source": "replicated"
                  },
                  {
                    "image": "postgres:9.6",
                    "dest": "images/postgres.tar",
                    "source": "public"
                  }
                ],
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "dest": {
                    "description": "The destination for the docker image, such as `api.tar` or `docker-images/worker.tar`.",
                    "type": "string"
                  },
                  "image": {
                    "description": "The destination for the docker image, such as `api.tar` or `docker-images/worker.tar`.",
                    "type": "string"
                  },
                  "mode": {
                    "description": "The unix file permissions to be set on the image tar archive, e.g `600`",
                    "type": "integer"
                  },
                  "source": {
                    "description": "The source for the image. Should be either `public`, `replicated`, or the name of a third-party private registry previously configured on [vendor.replicated.com](https://vendor.replicated.com)",
                    "type": "string"
                  }
                },
                "required": [
                  "dest",
                  "image",
                  "source"
                ]
              },
              "github": {
                "description": "A `github` asset is created from files downloaded from either a public or a linked Github repo.",
                "examples": [
                  {
                    "repo": "github.com/replicatedhq/superbigtool-k8s",
                    "ref": "8fcaebe55af67fe6789fa678faaa76fa867fbc",
                    "path": "**/*.yml",
                    "dest": "./k8s/",
                    "private": true
                  }
                ],
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "dest": {
                    "type": "string"
                  },
                  "mode": {
                    "type": "integer"
                  },
                  "path": {
                    "type": "string"
                  },
                  "ref": {
                    "type": "string"
                  },
                  "repo": {
                    "type": "string"
                  },
                  "source": {
                    "type": "string"
                  }
                },
                "required": [
                  "repo",
                  "path",
                  "dest",
                  "source"
                ]
              },
              "inline": {
                "description": "An `inline` asset is one that is specified directly in your Ship application's spec.",
                "examples": [
                  {
                    "dest": "install.sh",
                    "mode": 755,
                    "contents": "#!/bin/sh\nkubectl apply -f ./deploy.yml -n {{repl ConfigOption \"k8s_namespace\" }}"
                  },
                  {
                    "dest": "deploy.yml",
                    "contents": "\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: api\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: retraced\n        tier: api\n    spec:\n      volumes:\n        - name: var-run\n          hostPath:\n            path: /var/run/retraced/\n      imagePullSecrets:\n        - name: quayio\n      containers:\n        - name: api\n          image: quay.io/retracedhq/api:{{ tag }}\n          ports:\n            - containerPort: 3000\n\n"
                  }
                ],
                "type": "object",
                "properties": {
                  "contents": {
                    "description": "The contents of the file",
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "dest": {
                    "description": "A path to which the file should be written when generating assets",
                    "type": "string"
                  },
                  "mode": {
                    "description": "Specifies file mode of the created asset, defaults to `0644`",
                    "type": "integer"
                  }
                },
                "required": [
                  "contents",
                  "dest"
                ]
              }
            }
          }
        }
      }
    },
    "config": {
      "description": "Config allows you to describe your application's environment-specific configuration options. This can be things like\n\n- External database configuration\n- Infrastructure topology details\n- internal container or artifact repositories\n- TCP Ports to listen on",
      "type": "object",
      "properties": {
        "v1": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string"
              },
              "filters": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "items": {
                "type": "array"
              },
              "name": {
                "type": "string"
              },
              "test_proc": {
                "type": "object",
                "properties": {
                  "arg_fields": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "args": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "command": {
                    "type": "string"
                  },
                  "display_name": {
                    "type": "string"
                  },
                  "run_on_save": {
                    "type": "string"
                  },
                  "timeout": {
                    "type": "integer"
                  }
                },
                "required": [
                  "display_name",
                  "command",
                  "timeout",
                  "arg_fields",
                  "args",
                  "run_on_save"
                ]
              },
              "title": {
                "type": "string"
              },
              "when": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "title",
              "items"
            ]
          }
        }
      }
    },
    "lifecycle": {
      "description": "Lifecycle allows you to customize the messaging and workflow for your end customer.",
      "type": "object",
      "properties": {
        "v1": {
          "description": "v1 defines lifecycle/v1 steps",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "message": {
                "description": "A `message` step will print a message to the console or UI.",
                "examples": [
                  {
                    "contents": "This tool will prepare assets to deploy CoolTool Enterprise to your Kubernetes cluster"
                  },
                  {
                    "contents": "You may be missing a required prerequisite for this application. Please ensure docker is configured on the target server.",
                    "level": "warn"
                  }
                ],
                "type": "object",
                "properties": {
                  "contents": {
                    "description": "the message to display",
                    "type": "string"
                  },
                  "level": {
                    "description": "the severity of the message -- defaults to `info`. Other options are `debug`, `warn`, and `error`",
                    "type": "string"
                  }
                },
                "required": [
                  "contents"
                ]
              },
              "render": {
                "description": "A `render` step will do the work of collecting configuration values from a user and using them to generate the final assets that can be used to deploy an application.",
                "examples": [
                  {},
                  {
                    "skip_plan": true,
                    "skip_state_warning": true
                  }
                ],
                "type": "object",
                "properties": {
                  "skip_plan": {
                    "description": "Whether to skip the \"plan\" phase of `render`, in which the user can confirm the actions that Ship will take to generate application assets",
                    "type": "boolean"
                  },
                  "skip_state_warning": {
                    "description": "If set to `true`, will omit the default warning message informing the user that a state file has been created and to save that state file for future ship runs. If this is set to `true`, your YAML should specify a `message` step that explains the purpose and importance of this state file.",
                    "type": "boolean"
                  }
                },
                "required": []
              }
            }
          }
        }
      }
    }
  },
  "required": [
    "assets",
    "lifecycle",
    "config"
  ]
}
